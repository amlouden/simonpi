#!/bin/bash

ARCHISO="ArchLinuxARM-$MODEL-latest.tar.gz"
FILES=("$ARCHISO" "$ARCHISO.md5")

integrityCheck() {
	cd "$SIMONPIFOLDER/$MODEL" || exit

	if md5sum --status -c "$ARCHISO.md5"; then
		echo -e "[$PASS] Integrity check successfully completed"
	else
		echo -e "[$FAIL] Integrity check failed, please retry to download"
		purgeEverything
		exit 1
	fi
}

downloadArchImage() {
	echo -e "[$PASS] Downloading ..."

	for i in "${FILES[@]}"; do
		if [ -f "$SIMONPIFOLDER/$MODEL/$i" ]; then
			echo -e "[$WARN] $i is present";
		else
			$WGET "http://os.archlinuxarm.org/os/$i" -P "$SIMONPIFOLDER/$MODEL" -q --show-progress
		fi
	done

	integrityCheck
}

createArchImg() {
	isaNumber='^[0-9]+$'

	if ! [[ "$GIGA" =~ $isaNumber ]] || [ -z "$GIGA" ]; then
		echo -e "[$FAIL] Please specify a size in GB"
		exit 1
	elif [ "$GIGA" -lt 2 ]; then
		echo -e "[$FAIL] Please specify a size >= 2 GB"
		exit 1
	fi

	checkDeps
	isMounted
	downloadArchImage

	if [ -e "$ARCHIMGPATH" ]; then
		echo -e "[$WARN] An ${ARCHIMGPATH##*/} file already exists. Please delete it"
		exit 1
	else
		SIZE=$(( GIGA*256 ))
		echo -e "[$PASS] Creating a $GIGA GB disk image named ${ARCHIMGPATH##*/} ..."
		dd if=/dev/zero of="$ARCHIMGPATH" bs=4M count="$SIZE" > /dev/null 2>&1

		echo -e "[$PASS] Creating partition table on ${ARCHIMGPATH##*/} ..."
		(echo o; echo n; echo p; echo 1; echo 8192; echo +100M; echo t; echo c; \
			echo n; echo p; echo 2; echo 8192; echo ; echo ; echo w) | \
			$FDISK -H 255 -S 63 "$ARCHIMGPATH" >/dev/null 2>&1
	fi

	sync
	mapImg
	checkRoot
	checkLoop
	mountImg
	formatLoDevices
	mountParts
	echo -e "[$PASS] Extracting $ARCHISO to ${ARCHIMGPATH##*/} ..."
	sudo "$BSDTAR" --exclude=^boot -xpf "$SIMONPIFOLDER/$MODEL/$ARCHISO" -C "$ROOTPATH"
	sudo "$BSDTAR" -xpf "$SIMONPIFOLDER/$MODEL/$ARCHISO" boot/* -C "$BOOTPATH" > /dev/null 2>&1
	customContent	
	sync
	umountParts
	umountImg
	sudo chown "$USER:$USER" "$ARCHIMGPATH"
	echo -e "[$PASS] DONE"
}

runCustomImg() {
	if [ -z "$IMGPATH" ]; then
		echo -e "[$FAIL] Please specify an image path"
		exit 1
	elif [ ! -f "$IMGPATH" ]; then
		echo -e "[$FAIL] File not found"
		exit 1
	elif [ "$($FILE "$IMGPATH" | cut -d  ' ' -f 2)" != "DOS/MBR" ]; then
		echo -e "[$FAIL] Please specify a valid disk image"
		exit 1
	else
		echo -e "[$PASS] Running with disk image named ${IMGPATH##*/}"
		ARCHIMGPATH=$IMGPATH
	fi
}
