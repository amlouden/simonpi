#!/bin/sh

# Network Variables
BRIDGE=rasp-br0
TAP=rasp-tap0
GATEWAY=192.168.66.1
FIRSTIP="${GATEWAY%.1}.2"
LASTIP="${GATEWAY%.1}.254"
BROADCAST="${GATEWAY%.1}.255"
NET="${GATEWAY%.1}.0"

# PID for dnsmasq dhcp server
DNSMASQPID=$(ps -ef | grep $GATEWAY | awk '/[d]nsmasq/{print $2}')

generateMAC() {
	# Generate Random MAC ADDRESS to avoid collisions
	printf -v MACADDR "52:54:%02x:%02x:%02x:%02x" $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff )) $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff ))
}

killNetwork() {
	echo -e "[$G+$RST] Shutting down present network for QEMU ..."

	if [ ! -z $DNSMASQPID ]; then
		kill -9 "$DNSMASQPID"
	fi

	while [ -d "/sys/class/net/$BRIDGE" ] || [ -d "/sys/class/net/$TAP" ]; do
		$IP link set "$TAP" nomaster # Enslave tap
		$IP link set "$BRIDGE" down
		$IP link set "$TAP" down
		$IP tuntap del dev "$TAP" mode tap # Remove tap
		$IP link delete "$BRIDGE" type bridge # Remove bridge
		sysctl -w net.ipv4.ip_forward=0 > /dev/null
	done
}

createNetwork() {
	echo -e "[$G+$RST] Turning up a network for QEMU ..."
	sysctl -w net.ipv4.ip_forward=1 > /dev/null
	$IP link add "$BRIDGE" type bridge # add bridge
	$IP addr add "$GATEWAY"/24 broadcast "$BROADCAST" dev "$BRIDGE" # Set ip to bridge interface
	$IP tuntap add dev "$TAP" mode tap # Add tap interface
	$IP link set $TAP master "$BRIDGE" # Bind tap to bridge
	$IP link set "$BRIDGE" up
	$IP link set "$TAP" up promisc on
	$DNSMASQ --listen-address="$GATEWAY" --interface="$BRIDGE" --bind-interfaces --dhcp-range="$FIRSTIP","$LASTIP"
	$IPTABLES -t nat -I POSTROUTING -s "$NET"/24 -j MASQUERADE # Nat configuration
	echo -e "[$Y!$RST] Gateway address: $G$GATEWAY$RST"
}