#!/bin/sh

. $OPT/simonpiemu/network

# Control Vars
LOCKFILE=/tmp/simonpi.lock
ANOTHERINSTANCE=
DOCKER=
QEMUKILLED=1

# QEMU Vars
export QEMU_AUDIO_DRV=none

finalizeIt() {
    umountParts
    umountImg
    if [ $DOCKER = "0" ]; then
        checkNetwork
    fi
    unlock
}

initChecks() {
    checkLock
    if [ $ANOTHERINSTANCE = "0" ]; then
        checkQemu
        checkDocker
        if [ $DOCKER = "0" ]; then
            generateMAC
            NETWORKCMD=" -net nic,macaddr=$MACADDR -net tap,ifname=$TAP,script=no,downscript=no"
            checkNetwork
        else
            generateMAC
            NETWORKCMD=" -net nic,macaddr=$MACADDR -net tap,ifname=$TAPDOCK,script=no,downscript=no"
        fi
        lock
    else
        echo -e "[$R-$RST] Already in use. Please check for other instances"
        exit 1
    fi
}

checkDocker() {
    if [ -f /.dockerenv ]; then
        DOCKER=1
        echo -e "[$Y!$RST] In a Docker container ..."
    else
        DOCKER=0
        echo -e "[$Y!$RST] Out of a Docker container ..."
    fi
}

checkLock() {
    if [ ! -f $LOCKFILE ] && [ $QEMUKILLED = "1" ]; then
        ANOTHERINSTANCE=0
    elif [ -f $LOCKFILE ] && [ $QEMUKILLED = "1" ]; then
        ANOTHERINSTANCE=0
        unlock
    else
        ANOTHERINSTANCE=1
    fi
}

lock() {
    touch $LOCKFILE
    echo -e "[$G+$RST] Locked for one instance"
}

unlock() {
    rm $LOCKFILE
    echo -e "[$G+$RST] Unlocked"
}

checkQemu() {
    if [ ! -z "$(pidof $QEMUARM)" ]; then
        pkill "$QEMUARM"
        QEMUKILLED=1
    else
        QEMUKILLED=0
    fi
}

run_rpi() {
    QEMURPI="$QEMUARM -nographic \
        -cpu arm1176 \
        -m 256 \
        -M versatilepb \
        -drive file=$SIMONPIFOLDER/sd-arch-$MODEL-qemu.img,if=scsi,format=raw \
        -kernel $OPT/simonpiemu/qemu-kernel-rpi \
        -append \"root=/dev/sda2 rootfstype=ext4 rw console=ttyAMA0 loglevel=0 panic=1 quiet\" \
        -semihosting \
        -no-reboot"

    QEMURPI+=$NETWORKCMD
    eval $QEMURPI
}

run_rpi2() {
    QEMURPI2="$QEMUARM -nographic \
        -cpu cortex-a15 \
        -m 1024 \
        -M vexpress-a15 \
        -smp cpus=2 \
        -drive file=$SIMONPIFOLDER/sd-arch-$MODEL-qemu.img,if=sd,format=raw \
        -kernel $OPT/simonpiemu/qemu-kernel-rpi-2 \
        -append \"root=/dev/mmcblk0p2 rootfstype=ext4 rw console=ttyAMA0 loglevel=0 panic=1 quiet\" \
        -dtb $OPT/simonpiemu/vexpress-v2p-ca15-tc1.dtb \
        -semihosting \
        -no-reboot"

    QEMURPI2+=$NETWORKCMD
    eval $QEMURPI2
}

run_rpi3() {
    QEMURPI3="$QEMUARM64 -nographic \
        -cpu cortex-a53 \
        -m 2048 \
        -M vexpress-a15 \
        -drive file=$SIMONPIFOLDER/sd-arch-$MODEL-qemu.img,if=sd,format=raw \
        -kernel $OPT/simonpiemu/qemu-kernel-rpi-3 \
        -append \"root=/dev/mmcblk0p2 rootfstype=ext4 rw console=ttyAMA0 loglevel=0 panic=1\" \
        -dtb $OPT/simonpiemu/vexpress-v2f-1xv7-ca53x2.dtb \
        -semihosting"

    QEMURPI3+=$NETWORKCMD
    eval $QEMURPI3
}

run_emu() {
    case $MODEL in
        rpi    ) initChecks && run_rpi && finalizeIt ;;
        rpi-2  ) initChecks && run_rpi2 && finalizeIt ;;
        rpi-3  ) initChecks && run_rpi3 && finalizeIt ;;
    esac
}
